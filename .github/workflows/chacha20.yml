name: chacha20

on:
  pull_request:
    paths:
      - "chacha20/**"
      - "Cargo.*"
  push:
    branches: master

defaults:
  run:
    working-directory: chacha20

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.41.0 # MSRV
          - stable
        target:
          - thumbv7em-none-eabi
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
          profile: minimal
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features cipher
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features legacy
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features rng
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features xchacha20
      - run: cargo build --target ${{ matrix.target }} --release --no-default-features --features cipher,force-soft,legacy,rng,xchacha20,zeroize

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.41.0 # MSRV
          - stable
    steps:
      - uses: actions/checkout@v1
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-rust-${{ matrix.toolchain }}-${{ matrix.target }}-cargo-build-target-${{ hashFiles('Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - run: cargo test --release
      - name: "Run cargo test --release (SSE2)"
        env:
          RUSTFLAGS: "-Ctarget-feature=+sse2 -Dwarnings"
        run: cargo test --release
      - name: "Run cargo test --release (AVX2)"
        env:
          RUSTFLAGS: "-Ctarget-feature=+avx2 -Dwarnings"
        run: cargo test --release
